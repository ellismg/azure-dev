parameters:
  SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)
  AzdDirectory: ""
  ServiceConnectionId: "3d79cc98-46f2-428c-bdd5-861414f85602"

steps:
  - bash: |
      curl --verbose \
        --header "Authorization: Bearer ${SYSTEM_ACCESSTOKEN}" \
        --header "Content-Type: application/json" \
        "${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECT}/_apis/serviceendpoint/endpoints?api-version=7.1"
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  - task: AzureCLI@2
    displayName: 'Dump Vars for Debug'
    inputs:
      scriptType: bash
      scriptLocation: inlineScript
      azureSubscription: azure-sdk-tests
      inlineScript: |
        env | sort
  - pwsh: |
      Get-ChildItem Env: | Sort-Object Name | Format-List

      $azdCmd = "azd"

      if ("${{ parameters.AzdDirectory }}" -ne "") {
        $azdCmd = "${{ parameters.AzdDirectory }}/azd"
      }

      $subscriptionConfiguration = @'
        ${{ parameters.SubscriptionConfiguration }}
      '@ | ConvertFrom-Json -AsHashtable;

      & $azdCmd login `
        --client-id "$($subscriptionConfiguration.TestApplicationId)" `
        --tenant-id "$($subscriptionConfiguration.TenantId)" `
        --service-connection-id "${{ parameters.ServiceConnectionId }}"

      if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

      & $azdCmd config set defaults.subscription "$($subscriptionConfiguration.SubscriptionId)"

      if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

      # Export subscription ID
      Write-Host "##vso[task.setvariable variable=SubscriptionId]$($subscriptionConfiguration.SubscriptionId)"

      # Export service principal auth information for terraform testing
      Write-Host "##vso[task.setvariable variable=arm-oidc-request-url;issecret=false]$($env:SYSTEM_OIDCREQUESTURI)?api-version=7.1&serviceConnectionId=${{ parameters.ServiceConnectionId }}"
      Write-Host "##vso[task.setvariable variable=arm-client-id;issecret=false]$($subscriptionConfiguration.TestApplicationId)"
      Write-Host "##vso[task.setvariable variable=arm-tenant-id;issecret=false]$($subscriptionConfiguration.TenantId)"

    condition: and(succeeded(), ne(variables['Skip.LiveTest'], 'true'))
    displayName: Azure Dev Login
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
